import { h, useState, useEffect } from 'skara-js'; // ✅ h is mandatory

export function App() {
  // Counter state
  const [count, setCount] = useState(0);
  
  // Todo state
  const [todos, setTodos] = useState([]);
  const [todoInput, setTodoInput] = useState('');
  
  // Timer state
  const [seconds, setSeconds] = useState(0);
  const [isRunning, setIsRunning] = useState(false);
  
  // Timer effect
  useEffect(() => {
    let interval = null;
    if (isRunning) {
      interval = setInterval(() => {
        setSeconds(s => s + 1);
      }, 1000);
    }
    return () => {
      if (interval) clearInterval(interval);
    };
  }, [isRunning]);
  
  // Todo functions
  const addTodo = () => {
    if (todoInput.trim()) {
      setTodos([...todos, { id: Date.now(), text: todoInput, done: false }]);
      setTodoInput('');
    }
  };
  
  const toggleTodo = (id) => {
    setTodos(todos.map(todo => 
      todo.id === id ? { ...todo, done: !todo.done } : todo
    ));
  };
  
  const deleteTodo = (id) => {
    setTodos(todos.filter(todo => todo.id !== id));
  };
  
  // Timer functions
  const formatTime = (secs) => {
    const mins = Math.floor(secs / 60);
    const remainingSecs = secs % 60;
    return `${mins.toString().padStart(2, '0')}:${remainingSecs.toString().padStart(2, '0')}`;
  };
  
  return (
    <div className="min-h-screen p-8">
      {/* Hero Section */}
      <div className="text-center mb-16 animate-float">
        <h1 className="hero-title">
          🏛️ SKARA.JS
        </h1>
        <p className="text-xl md:text-2xl text-white/80 max-w-3xl mx-auto leading-relaxed">
          Ancient wisdom meets modern development. Like the mysterious stone circles of 
          <span className="ancient-text"> Skara Brae</span>, built to last through the ages.
        </p>
      </div>
      
      {/* Features Grid */}
      <div className="feature-grid mb-16">
        <div className="feature-card">
          <span className="feature-icon">⚡</span>
          <h3 className="text-xl font-bold mb-2 text-cyan-400">Lightning Fast</h3>
          <p className="text-white/70">Built with modern ESBuild for instant compilation and hot reload.</p>
        </div>
        
        <div className="feature-card">
          <span className="feature-icon">🎨</span>
          <h3 className="text-xl font-bold mb-2 text-purple-400">Beautiful Design</h3>
          <p className="text-white/70">Tailwind CSS integration with custom Skara styling system.</p>
        </div>
        
        <div className="feature-card">
          <span className="feature-icon">🛠️</span>
          <h3 className="text-xl font-bold mb-2 text-pink-400">Developer Experience</h3>
          <p className="text-white/70">Custom file extensions, hot reload, and intuitive API design.</p>
        </div>
        
        <div className="feature-card">
          <span className="feature-icon">📦</span>
          <h3 className="text-xl font-bold mb-2 text-green-400">Complete Ecosystem</h3>
          <p className="text-white/70">Framework, dev server, and project generator all in one.</p>
        </div>
        
        <div className="feature-card">
          <span className="feature-icon">🏛️</span>
          <h3 className="text-xl font-bold mb-2 text-amber-400">Ancient Wisdom</h3>
          <p className="text-white/70">Inspired by Skara Brae - built to withstand the test of time.</p>
        </div>
        
        <div className="feature-card">
          <span className="feature-icon">🚀</span>
          <h3 className="text-xl font-bold mb-2 text-blue-400">Modern Power</h3>
          <p className="text-white/70">All the power of modern React with a unique Skara twist.</p>
        </div>
      </div>
      
      {/* Interactive Demos */}
      <div className="grid grid-cols-1 lg:grid-cols-3 gap-8 max-w-6xl mx-auto">
        
        {/* Counter Demo */}
        <div className="demo-section">
          <h3 className="text-2xl font-bold mb-6 ancient-text">⚡ Reactive Counter</h3>
          <div className="counter-display">{count}</div>
          <div className="button-group">
            <button 
              className="neon-button"
              onClick={() => setCount(count - 1)}
            >
              ➖ Decrease
            </button>
            <button 
              className="neon-button"
              onClick={() => setCount(count + 1)}
            >
              ➕ Increase
            </button>
            <button 
              className="neon-button bg-gradient-to-r from-red-500 to-pink-500 hover:from-red-400 hover:to-pink-400"
              onClick={() => setCount(0)}
            >
              🔄 Reset
            </button>
          </div>
        </div>
        
        {/* Todo Demo */}
        <div className="demo-section">
          <h3 className="text-2xl font-bold mb-6 ancient-text">📝 Smart Todo</h3>
          <div className="space-y-4">
            <div className="flex gap-2">
              <input
                type="text"
                className="todo-input flex-1"
                placeholder="Add a task..."
                value={todoInput}
                onChange={(e) => setTodoInput(e.target.value)}
                onKeyPress={(e) => e.key === 'Enter' && addTodo()}
              />
              <button className="neon-button" onClick={addTodo}>
                ➕
              </button>
            </div>
            
            <div className="todo-list">
              {todos.map(todo => (
                <div key={todo.id} className="todo-item">
                  <span 
                    className={`flex-1 text-left cursor-pointer ${todo.done ? 'line-through text-white/50' : ''}`}
                    onClick={() => toggleTodo(todo.id)}
                  >
                    {todo.done ? '✅' : '⭕'} {todo.text}
                  </span>
                  <button 
                    className="text-red-400 hover:text-red-300 ml-2"
                    onClick={() => deleteTodo(todo.id)}
                  >
                    🗑️
                  </button>
                </div>
              ))}
            </div>
            
            {todos.length === 0 && (
              <p className="text-white/50 text-sm">No tasks yet. Add one above! 🏛️</p>
            )}
          </div>
        </div>
        
        {/* Timer Demo */}
        <div className="demo-section">
          <h3 className="text-2xl font-bold mb-6 ancient-text">⏱️ Ancient Timer</h3>
          <div className="timer-display">{formatTime(seconds)}</div>
          
          <div className="progress-bar">
            <div 
              className="progress-fill" 
              style={{ width: `${(seconds % 60) * (100/60)}%` }}
            ></div>
          </div>
          
          <div className="button-group">
            <button 
              className={`neon-button ${isRunning ? 'bg-gradient-to-r from-red-500 to-orange-500 hover:from-red-400 hover:to-orange-400' : 'bg-gradient-to-r from-green-500 to-emerald-500 hover:from-green-400 hover:to-emerald-400'}`}
              onClick={() => setIsRunning(!isRunning)}
            >
              {isRunning ? '⏸️ Pause' : '▶️ Start'}
            </button>
            <button 
              className="neon-button bg-gradient-to-r from-gray-500 to-slate-500 hover:from-gray-400 hover:to-slate-400"
              onClick={() => {
                setSeconds(0);
                setIsRunning(false);
              }}
            >
              🔄 Reset
            </button>
          </div>
        </div>
      </div>
      
      {/* Footer */}
      <div className="text-center mt-16 p-8">
        <div className="cyber-border max-w-2xl mx-auto">
          <div className="cyber-border-inner">
            <h4 className="text-xl font-bold mb-4 ancient-text">🏛️ Built with Skara.js</h4>
            <p className="text-white/70 mb-4">
              A modern JavaScript framework inspired by ancient wisdom. 
              Like Skara Brae, built to last through the ages.
            </p>
            <div className="flex justify-center gap-4 text-sm">
              <span className="text-cyan-400">⚡ Fast</span>
              <span className="text-purple-400">🎨 Beautiful</span>
              <span className="text-pink-400">🛠️ Developer-Friendly</span>
              <span className="text-green-400">🏛️ Timeless</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}